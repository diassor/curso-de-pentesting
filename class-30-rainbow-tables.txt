ataques al hash con Rainbow tables

Los ataques dependen del tiempo que se valla a tomar depende de la
longitud de los passwords que estemos procesando .

cuando se calcula un valor hash es muy diferente cuando se calcula
el valor de una cadena pequena de caracteres a una cadena de
caracteres larga a medida que crecen los diccionarios , van
creciendo el tiempo de procesamiento .

Hay unas tablas que ya tienen valores hash precalculados de manera
que cuando se hace el ataque solo tenemos que comparar con la
tabla de hashes y el valor hash de la contrasena que hemos
adquerido

La desventaja de los Rainbow tables es que a medida que van creciendo  el quizspace y el tamano de la table es muy grande .

path = aplication => password Attacks ophcrack

ophcrack = es una herramienta que nos permite usar diferentes
           tipos de tablas para hacer este tipo de ataques
           en tablas podemos descargar las que necesitemos
           para configurar(no vienen instaladas por el gran
           volumen )

           Nota para el examen:

           pongan más atención a partir de el minuto 6:27

           podemos hacer nuestro propio Rainbow tables haciendo
           diccionarios dirigidos a la persona duena del equipo

           wn ophcrack tables seguimos los pasos para cargar
           las tablas descargadas y que el programa pueda hacer
           uso de ellas .

           Luego cargamos el archivo con los hashes que hemos
           optenido de nuestra victima

ophcrack en load escogemos qye tipo de archivo con hash vamos a
usar

ophcrack =  damos en el tag crack y listo comienza a correr el
            programa

    Nota =  por que encontro mas passwords que en john de ripper
            para john de ripper usamos un diccionario
            (es clave que el  password este en el diccionario)
            en el Rainbow table que estamos usando tiene mas
            passwords que los que usamos con john de ripper.

    caracteristica de Rainbow table = recordar que cuando
        hablabamos de los $salt que son las cadenas aleatorias
        que se agregan al final (es cuando dos usuarios tienen
        el mismo password y el sistema necesita identificarlos
        el uno del otro )
        el problema con los $salt frente a un ataque que hagamos
        con Rainbow table es que dependiendo del tamano del $salt
        y el tamano del password el $salt nos puede hacer que el
        quizspace crezca mucho
        ejemplo =  si tengo una cadena de 10 caracteres de
        password  y le agrego 10 0 20 caracteres mas de $salt
        que es un valor aleatorio , que al sistema operativo
        no le cuesta nada calcular , pues ahora tenemos que
        generar una Rainbow table que contenga cadenas de
        20 o 30 caracteres lo cual es un quizspace muy grande ,
        el tamano del Rainbow table sera inmanejable y el
        ataque se vuelve menos eficiente .

        El Rainbow table es una buena herramienta para valores
        hash que sean rapido de calcular y sencillos
        en otros formatos de encripatacion como sha, sha1, sha256,
        usan cifrados de bloque muy grandes , el proceso de
        calculo se demora mucho mas y sobre todo tienen un
        quizspace mas grande , eso hace que las tablas de
        Rainbow table son de tamano no manejables .

        los ataques de Rainbow table solo son eficases para
        ciertos tipos de hash como el md5
        en conclucion la ingenieria social debe prevalecer
        por encima de todo para crear buenos diccionario
        y Rainbow tables  
