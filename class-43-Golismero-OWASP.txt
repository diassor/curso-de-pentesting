Golismero - OWASP

Golismero = coleccina muchos plugins de diferentes herramientas
    y recursos para integrar todo en una sola herramienta
    y poder generar un unico reporte que incluye diferentes
    fuentes de informacion

    root@edwin:~# golismero -h (ayuda)

    /-------------------------------------------\
    | GoLismero 2.0.0b6, The Web Knife          |
    | Copyright (C) 2011-2014 GoLismero Project |
    |                                           |
    | Contact: contact@golismero-project.com    |
    \-------------------------------------------/

GoLismero = es un script en python que ya viene integrado

    scan = a una web y seleccionamos que plugins queremos
        usar para generar un reporte y podemos escoger el
        formato del reporte que vamos a generar

    ejemplo =
        scan a website and show the results on screen:
            golismero.py scan http://www.example.com

    toda la informacion de GoLismero aparce como golismero.py
    pero como esta en kali no necesitamos escribir el .py
    ya esta como variable de entorno


@@@@@@@@@@@@@@@@@@@@@@@@@@@@
"
    root@edwin:~# golismero plugins

/-------------------------------------------\
| GoLismero 2.0.0b6, The Web Knife          |
| Copyright (C) 2011-2014 GoLismero Project |
|                                           |
| Contact: contact@golismero-project.com    |
\-------------------------------------------/

-------------
 Plugin list
-------------

-= Import plugins =-

csv_nikto:
    Import the results of a Nikto scan in CSV format.

csv_spiderfoot:
    Import the results of a SpiderFoot scan in CSV format.
"

lista de plugins instaladas y disponibles en GoLismero

ejemplo =
    xml_nmap:
    Import the results of an Nmap scan in XML format.
    este es un repore de otra herramienta que podemos
    importar para trabajar en el con GoLismero

    brute_dns:
    Tries to find hidden subdomains by brute force.
    tambien podemos hacer ataque de furza bruta
    es muy completa esta suit

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`

ejemplo =


root@edwin:~#  golismero scan webscantest.com -e nikto

    GoLismero =  suit
    scan = parametro a usar
    webscantest = target
    -e = parametro para escoger el plugin
    nikto = plugin a usar


nota = GoLismero trabaja bajo una estructura de base de datos
        cada vez que se genere un reporte el va a poner
        en una base de datos si solo queremos que el me
        muestre en consola sin guardar en la base de datos
        usamos el parametro

        -nd = not database

        es muy practico hacer pruebas antes de generar un
        reporte que este en la base de datos por que irse
        a una databese lleva mas tiempo ,
        cuando hacemos pruebas ya tenemos idea de que podemos
        esperar hay es donde generamos reportes

        GoLismero started at 2019-08-02 16:59:23.053528 UTC
        [*] GoLismero: Audit name: golismero-6jRBVPHc
        [*] GoLismero: Added 3 new targets to the database.
        [*] GoLismero: Launching tests...
        [*] GoLismero: Current stage: Scanning (non-intrusive)
        [*] Nikto: Launching Nikto against: webscantest.com
        [*] Nikto: - Nikto v2.1.5

        informacion general del target

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@2

        # Summary #-

        Audit started:   2019-08-02 12:59:23.119469 UTC
        Audit ended:     2019-08-02 12:59:33.762729 UTC
        Execution time:  0 days, 0 hours, 0 minutes and 10 seconds

        Scanned hosts:   2
        Vulnerabilities: 0

        -# Vulnerabilities #-

        No vulnerabilities found.

        GoLismero finished at 2019-08-02 16:59:33.820012 UTC

    aqui esta summary del scan usando el plugin nikto


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    root@edwin:~# golismero scan webscantest.com -e nikto
        -e    spider  -nd

        hemos adicionado dos parametros mas

        -nd = not databese
        spider = ursl

        con estos dos parametros con el uno no cargamos a la
        base de datos
        y con el spider tratamos de generar armar el
        directorio o identificar cuantas paginas esta
        relacionadas atraves de las urls dentro del mismo
        dominio osea :
        contruimos un arbol para identificar las posibles
        url que tambien hagan parte del dominio
        ejmplo=
            webs que tienen inicio de session para hacer
            inyeccion de sql , XSS . etc

            [*] GoLismero: Current stage: Reconaissance
        [*] Web Spider: Spidering URL: http://webscantest.com/
        [*] Web Spider: Found 26 links in URL: http://webscantest.com/
        [*] GoLismero: Current stage: Scanning (non-intrusive)
        [*] Nikto: Launching Nikto against: webscantest.com
        [*] Nikto: - Nikto v2.1.5

    sider = nos dice que encontro 26 links en la
        url de webscantest

    el reporte no dice mucho por que GoLismero esta enfocado
    en solamente encontrar vulnerabilidades
    cuando usamos diferentes plugins
    nikto hace el scaneo a la url que especifique  y
    spider hace que nikto scanee las 26 urls que encontro


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

https://google-gruyere.appspot.com/ =  es un recurso online
    que tiene algo inusual por que generalmente las webs que
    usamos para pruebas no estan online por que se usan para
    ejercios en local

    Es una pagina para hacer ejercios de ataque y viene con
    definiciones para que uno pueda estudiar y aprender
    de forma didactica

ahora vamos hacer el analisis de https://google-gruyere.appspot.com/
ademas vamos a usar la databese para hacer el summary no
salga en la consola sino en la databese y luego generamos
el reporte

root@edwin:~# golismero scan https://google-gruyere.appspot.com/ -e nikto -e spider -db gruyer.db


en otra terminal vamos a correr

root@edwin:~# golismero scan https://google-gruyere.appspot.com/ -e nikto -e spider -e sslscan -db gruyer2.db

    -sslscan  = scaneo de vulnerabilidades de certificados
        ssl

Tomo un poco mas tiempo por que se queda en aanlisis de ssl
y nos muestra un pequeno resumen de las vulnerabilidades que
encontro





    -# Vulnerabilities #-

        -- Invalid SSL/TLS Certificate (vulnerability/ssl/
            invalid_certificate) --


            +---------------+--------------------------------------------------------------------+
        | Description   | An invalid SSL/TLS certificate was found. This may allow a         |
        |               | strategically located attacker to snoop on network traffic, or     |
        |               | perform a Man-In-The-Middle attack against unsuspecting users      |
        |               | connecting to this host.                                           |
        +---------------+--------------------------------------------------------------------+
        | Solution      | Create a new certificate.                                          |
        +---------------+--------------------------------------------------------------------+

    ahora vamos a usar golismero para generar el reporte
    con esta informacion

    root@edwin:~# golismero report  gruyer.html -db gruyer3.db
    usamos el parametro report para generar el reporte
    GoLismero soporta diferentes tipos de extencion en
    este caso usamos html pero podemos usar otros como txt. svc
    y mas .

    el path donde almacena todos estos datos es :

    root@edwin:/usr/share/golismero# ls
    doc             golismero.py  gruyer.db    plugins   thirdparty_libs
    golismero       gruyer2.db    gruyer.html  profiles  tools
    golismero.conf  gruyer3.db    misc         tests     wordlist

        aqui aparece los reportes que hisimos anteriormente

    abrimos el archivo
    file:///usr/share/golismero/gruyer.html

    el reporte visualmete es muy interesante

    tarea hacer ejercios en google-gruyere.appspot.com
    tiene muchas vulnerabilidades para aprender
    
