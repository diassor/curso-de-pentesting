creacion de diccionarios

 Las contrasenas nunca estan almacenadas en texto plano ,  simpre estan encriptadas por hash (algoritmo matematico e irreversible
 ) . Con el resultado yo no puedo tener de ningun modo ninguna informacion hacerca de la fuente de origen y esto me va a permitir siempre almacenar una firma que es unica pero que
 en ningun momento expone la contrasenas original que es la
 que almacena el usuario y que yo no voy a saber nunca con cual
 contrasena original se hizo ese hash y hacimismo yo no puedo
 repricar ese hash amenos que yo tenga la contrasena original

 Los ataques a las contrasenas son al resultado del algoritmo hash
 de la clase anterior de ataque con armitage hemos tenido unos
 hash que se almacenan por los usuarios ,

 vamos a crear un diccionario para tratar de encontrar la contrasena
 segun el hash que hemos optenido de ataque anterior de armitage

 dos conceptos :
    ataque de fuerza bruta
    ataque por diccionario (reune ciertas palabras que puedan
        existir para formar un ataque con resultado del mismo hash)

@@@@@ Nota:
        Dependiendo del tipo de cifrado en este caso algoritmos
        hash es muy poco probabre encontrar una contrasena o dar
        con el valor correcto por el tamano de lo que se llama
        (quizspace = en criptografia es todo el espacio de
            caracteres o mas bien todo el posible universo
            de combinaciones que aceptan una contrasena
            ejemplo =
                en un candado pequeno de cuatro cifras el
                quizspace es de un tamano de 10.000 mil
                combinaciones si incluimos letras o caracteres
                especiales hay el quizspace aumenta y eso hace
                que la contidad de intentos cresca expotencialmente
                hasta poder encontrar una contrasena acertada
                a la que estamos buscando )

root@edwin:~# crunch (herramienta basica para crear diccionarios)

    la herramienta lo que hace es crear una lista de combinaciones
    con los caracteres que le vamos a agregar

    root@edwin:~# crunch 1 4 (1 4 es un rango de combinaciones
            que empieza desde un valor y termina en cuatro )

    Crunch will now generate the following amount of data: 2357264 bytes (es el peso del diccionario creado )
    2 MB
    0 GB
    0 TB
    0 PB
    Crunch will now generate the following number of lines: 475254
        ( este es el numero de lineas o combinaciones que creo )

    root@edwin:~# less /usr/share/crunch/charset.lst
        (lista de caracteres que tiene por defecto )

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@2

    Tambien podemos crear un patron que cree palabras de ejmplo
    8 caracteres

    root@edwin:~# crunch 8 8 -t @%,%2017
        (Aqui estamos usando un patron
            , = letra mayuscula
            @ = letra minuscula
            % = son numeros
            2017 = el numero que queremos )
            a0A02017 =
                a = letra minuscula (@)
                0 = numero (%)
                A = coma (,)
                0 = numero (%)
                2017 = el numero que asignamos para todas las
                    combinaciones
            z9Z92017 =  asi queda el final
    Crunch will now generate the following amount of data: 608400 bytes
    0 MB
    0 GB
    0 TB
    0 PB
    Crunch will now generate the following number of lines: 67600

 !!!!!!!!!!!
    Nota =  revizar el man de crunch

    root@edwin:~# crunch 1 1 -p Sam Frodo Merry Pippin
        -p = Combinar palabras sin que se repitan (-p)
        1 1 = El rango no importa pero hay que ponerlo
              el no lo va a leer
        Sam Frodo Merry Pippin = los nombre que queremos usar
            para crear el diccionario

    Crunch will now generate approximately the following amount of data: 480 bytes
    0 MB
    0 GB
    0 TB
    0 PB
    Crunch will now generate the following number of lines: 24

    FrodoMerrySamPippin
    FrodoPippinMerrySam
    FrodoPippinSamMerry
    FrodoSamMerryPippin
    FrodoSamPippinMerry
    MerryFrodoPippinSam
    MerryFrodoSamPippin
    MerryPippinFrodoSam
    MerryPippinSamFrodo
    MerrySamFrodoPippin
    MerrySamPippinFrodo
    PippinFrodoMerrySam
    PippinFrodoSamMerry
    PippinMerryFrodoSam
    PippinMerrySamFrodo
    PippinSamFrodoMerry
    PippinSamMerryFrodo
    SamFrodoMerryPippin
    SamFrodoPippinMerry
    SamMerryFrodoPippin
    SamMerryPippinFrodo
    SamPippinFrodoMerry
    SamPippinMerryFrodo

En ninguna de ellas se repite ninguno de los nombres

root@edwin:~# crunch 1 1 -q /root/Documents/palabras.txt
    (crea un diccionario con las palabras que estan en
    el archivo sin que se repitan las lineas ,combinaciones
    entre lineas )
Crunch will now generate approximately the following amount of data: 24480 bytes
0 MB
0 GB
0 TB
0 PB
Crunch will now generate the following number of lines: 720
alejandroamoredwin juanmamaornela
alejandroamoredwin juanornelamama
alejandroamoredwin mamajuanornela
alejandroamoredwin mamaornelajuan




root@edwin:~# crunch 2 5 1234567890 -o /root/Documents/numeros.txt
    -o = genera un archivo
    1234567890 = numeros que quiero que use
    2 = empieza de dos valores
    5 = termina con cinco valores

Crunch will now generate the following amount of data: 654300 bytes
0 MB
0 GB
0 TB
0 PB
Crunch will now generate the following number of lines: 111100

crunch: 100% completed generating output
