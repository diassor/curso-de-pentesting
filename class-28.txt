Ataque a contrasenas locales (linux)

Vamos a analisar los hashes y como se almacenan en un sistema
operativo y como podemos hacer un ataque a esos hashes ,
vamos hacer ataques a archivos que hemos sacado de sistemas operativos con ciertos niveles de permisos .
osea si nosotros tenemos acceso a una cuenta de cierto nivel
a una maquina linux o windows y podemos sacar los aarchivos donde
se almacenan los hashes quizas podemos usar esos archivos para
tratar de desifrar esos hashes o hacer un ataque de diccionario
a esos hashes y optener las cuentas de los otros usuarios que nos
pueda interesar

como se almacenan los passwords en los sistemas linux ?
    root@edwin:/etc# less passwd
        es donde se encuentran los usuarios de un sistema unix
        recordemos que no solamente nosotros definimos usarios ,
        sino que hay muchos servicios y herramientas que crean
        usuarios y muchos de estos nos puede proporcionar acceso
        a una eventualidad

        root:x:0:0:root:/root:/bin/bash
        daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
        bin:x:2:2:bin:/bin:/usr/sbin/nologin
        sys:x:3:3:sys:/dev:/usr/sbin/nologin
        sync:x:4:65534:sync:/bin:/bin/sync
como se lee esta informacio
        root = nombre de usario
        x = significa que el password esta cifrado
            osea ese espacio corresponde al password
        0 = id del usario
        0 = id grupo
        root = descripcion del usario
        /root = donde tiene su carpeta de inicio
        bin/bash = es el shell cuando interactua o  consola
            por donde normalmente trabaja

    en esta carpatea contiene los usuarios pero no los
    passwords y los hashes
        hay excepciones cuando en lugar de una x aparece
        un signo de esclamacion de cierre significa
        que el usario y contrasena estan bloqueados
        y si tienen two singos thats mean that they don't
        have password

    root@edwin:/etc# less shadow
        el archivo shadow lo que hace es almacenar el password
        cifrado de cada uno de los usarios

        root =  nombre de usario
        kjhkjhsjh =  con los caracteres del password cifrado

        Los demas usuarios no tienen este mismo hash por
        que son usuarios de sistemas en mi caso tengo un usuario
        que cree anteriormente
        edwin = usuario
        kjhsaldk =  su hash correspondiente

        daemon:*:17785:0:99999:7:::
        daemon = usuario de sistema
        * = corresponde al hash que del password it haves asignada
            how in this example its doesn't have a hash becouse
            its a user system
        17785 = hace cuantos dias cambio el password
        0 =  el minimo numero de dias en que el password puede
             ser cambiado
        99999 =  numero maximo de dias en que deba ser cambiado
                 el password
        7 = numero de dias antes que se expire el password ,
            cuando  se le avisa al usuario que su password va
            a expirar , durante este periodo de dias de va a indicar que su password va a expirar
        :: = la cantidad de dias que cuanta quedara bloqueada
        : = la cantidad de veces que la cuaenta a sido bloqueada

    unshadow = es un comando de jhon de ripper ( es una
        herramienta de analisis criptografico ) nos permite
        hacer ataques a contrasena y hashes de diferentes formas
    El fundamento principal a hashes es que se tiene el hash de
        destino osea el resultado ede la funcion lo que hace el
        ataque es calcular uno por uno los hashes de cada una de
        las palabras que tengo y comparo el has de la operacion
        con el hash que estoy opteniendo asi cuando se encuentren
        que los hashes coninciden es cuando encontramos la contrasena
    hay el md5, los algoritmos shadow , los 256 etc ... y
    por otro lado el tiempo en que se demore calculando el hash
    depende mucho de la cantidad de informacion
        ejemplo:
            podemos calcular el hash de una letra o de una palabra
            o el hash de un disco duro completo (este tomara
            mas tiempo que el de una palabra )
        estos ataques de jhon de ripper tienen sentido y son
        eficientes cuando estamos trabajando con diccionarios con
        un quizspace relativamente pequeno

    root@edwin:~/Documents/medusa-ejercio-casa/new pass# unshadow
        passwd.txt shadow.txt > hash-linux.txt
    este archivo creado es para relacioanar la informacion
    optenida de etc de linux relacionar user(shadow) y password
    (passwd) estos dos archivos fueron compiados con terminacion
    txt para crear luego otro archivo llamado hash-linux.txt
    donde se relacionan los nombres de usuario y los passwords
    encontrados y luego hacer un analisis o ataque con jhon de
    ripper

    root@edwin:~/Documents/medusa-ejercio-casa/new pass# hash-identifier
    este comando nos da informacion haceca de que tipo de
    encripatado es en mi caso no tube exito pero el profesor
    es de un MD5 que es uno de  los hash mas livianos que hay

estos usando john de ripper para el ataque a las contrasenas del
shadow de unix
    root@edwin:~/Documents/medusa-ejercio-casa/new pass# john --rules --wordlist=passwords.txt hash-linux.txt
Using default input encoding: UTF-8
Loaded 2 password hashes with 2 different salts (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x])

    (aqui se ve que tiene diferentes tipos de encriptografias
    y va a comenzar a comparar los hash con los resultados que
    va opteniendo esto puede demorar un muy buen largo tiempo )
    
